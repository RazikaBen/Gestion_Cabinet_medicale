<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Gestion_Cabinet_medicale">
    <Style TargetType="Window" x:Key="mainWindowStyle">
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome>
                    <WindowChrome.CaptionHeight>
                        50
                    </WindowChrome.CaptionHeight>
                </WindowChrome>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Window">
                    <Grid>
                        <Border Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="5" Direction="-90" RenderingBias="Quality" ShadowDepth="2"/>
                            </Border.Effect>
                            <ContentPresenter Content="{TemplateBinding Content}" Margin="5"/>
                        </Border>
                        
                       
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    <Style TargetType="{x:Type Button}"  x:Key="PatientButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="bord"  Margin="2" Height="28" Width="28" Background="{TemplateBinding Background}" CornerRadius="28">
                        <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Height" Value="26" TargetName="bord"/>
                            <Setter Property="Width" Value="26" TargetName="bord"/>
                            <Setter Property="CornerRadius" Value="26" TargetName="bord"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Height" Value="28" TargetName="bord"/>
                            <Setter Property="Width" Value="28" TargetName="bord"/>
                            <Setter Property="CornerRadius" Value="28" TargetName="bord"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Button" x:Key="navigateButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button" >
                    <Border  x:Name="border" Background="{TemplateBinding Background}"  Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" >
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="3" ShadowDepth="5"  Opacity="0.3" />
                        </Border.Effect>
                        <StackPanel Orientation="Horizontal" Margin="5" HorizontalAlignment="Center">
                            <Path Data="{Binding Path=(local:AttachedProperty.IconData) , RelativeSource={RelativeSource Mode=TemplatedParent} }" Stretch="Fill" Height="11" Width="11" Margin="8 0" Fill="White" Opacity="0.8" VerticalAlignment="Center"/>
                            <TextBlock Text="{TemplateBinding Content}" HorizontalAlignment="Left" Margin="2" Foreground="White" FontSize="11" FontFamily="{DynamicResource comforta}" VerticalAlignment="Center"  FontWeight="Light" Opacity="0.8"  />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True" >
                            <Setter Property="Background" Value="#507091" TargetName="border"/>

                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False" >
                            <Setter Property="Background" Value="{Binding Background , RelativeSource={RelativeSource AncestorType=Button}}" TargetName="border"/>

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="CheckBox" x:Key="CheckBoxStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid Height="22" Width="22">
                        <Ellipse x:Name="ellp" Fill="#68C183" Height="18" Width="18" />

                        <Path HorizontalAlignment="Center" VerticalAlignment="Center" Height="6" Width="8"  Data="M9 22l-10-10.598 2.798-2.859 7.149 7.473 13.144-14.016 2.909 2.806z" Fill="#ffffff"  Stretch="Fill"  StrokeLineJoin="Miter" Name="checkPath" Stroke="{Binding Fill ,RelativeSource={RelativeSource Mode=Self}}"  StrokeThickness="1"/>





                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Fill" TargetName="ellp" Value="#E1E0D5"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Fill" TargetName="ellp" Value="#68C183"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>

    </Style>
    <Style TargetType="Button" x:Key="ButtonBase" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">

                    <Border Background="Black"  Opacity="0.3" Height="20" Width="80" CornerRadius="3" >
                        <ContentPresenter HorizontalAlignment="Center" Content="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="TextBox" x:Key="TextBoxStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Focusable="True" BorderBrush="{DynamicResource TurqoiFoncé}" Height="25" Width="140" BorderThickness="0,0,0,1">
                        <TextBlock Focusable="True" Cursor="ScrollAll"  Text="{TemplateBinding Text}"  FontSize="13" Foreground="{DynamicResource TurqoiFoncé}"/>


                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TextBoxStyle2" TargetType="{x:Type TextBox}">



        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Foreground" Value="{DynamicResource TurqoiClair}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily" Value="{DynamicResource comfortaBold}" />
        <Setter Property="Text" Value="{Binding Text, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Template">
           
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <StackPanel Width="{TemplateBinding Width}">

                        <Border x:Name="border" BorderBrush="{DynamicResource TurqoiFoncé}"  BorderThickness="0 0 0 2" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid>
                                <Border x:Name="sombreBorder" VerticalAlignment="Top" Height="0" Width="{TemplateBinding Width}" Background="{DynamicResource TurqoiTresClair}" Opacity="0.5" BorderThickness="0"/>
                                <Grid >

                                    <ScrollViewer  VerticalAlignment="Center"  x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" VerticalContentAlignment="Center"  />


                           

                                    <TextBlock Text="{Binding Path=(local:AttachedProperty.Placeholder), RelativeSource={RelativeSource Mode=TemplatedParent}}" x:Name="Placeholder" Foreground="{DynamicResource TurqoiClair}" FontSize="11" VerticalAlignment="Center" Opacity="0.6" FontFamily="{DynamicResource comforta}">
                                        <TextBlock.RenderTransform>
                                            <TranslateTransform X="1" Y="2" x:Name="translate"/>
                                        </TextBlock.RenderTransform>

                                    </TextBlock>

                                </Grid>
                            </Grid>
                        </Border>

                    </StackPanel>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderThickness" TargetName="border" Value="0"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsKeyboardFocused , RelativeSource={RelativeSource Self}}" Value="False"/>
                                <Condition Binding="{Binding Text, Converter={StaticResource IsTextToBooleanValueConverter}, RelativeSource={RelativeSource Self}}" Value="True"/>
                            </MultiDataTrigger.Conditions>


                            <Setter TargetName="Placeholder"  Property="RenderTransform" >
                                <Setter.Value>
                                    <TranslateTransform X="1" Y="28"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderThickness" TargetName="border" Value="0"/>
                            <Setter Property="Background" TargetName="border" Value="#EAEAF1"/>


                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsKeyboardFocused , RelativeSource={RelativeSource Self}}" Value="True"/>
                                <Condition Binding="{Binding Text, Converter={StaticResource IsTextToBooleanValueConverter}, RelativeSource={RelativeSource Self}}" Value="True"/>
                            </MultiDataTrigger.Conditions>


                            <Setter TargetName="Placeholder"  Property="RenderTransform" >
                                <Setter.Value>
                                    <TranslateTransform X="1" Y="28"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderThickness" TargetName="border" Value="0"/>
                            <Setter Property="Background" TargetName="border" Value="#EAEAF1"/>


                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsKeyboardFocused , RelativeSource={RelativeSource Self}}" Value="False"/>
                                <Condition Binding="{Binding Text, Converter={StaticResource IsTextToBooleanValueConverter}, RelativeSource={RelativeSource Self}}" Value="False"/>
                            </MultiDataTrigger.Conditions>


                            <Setter TargetName="Placeholder"  Property="RenderTransform" >
                                <Setter.Value>
                                    <TranslateTransform X="1" Y="2"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderThickness" TargetName="border" Value="0"/>
                            <Setter Property="Background" TargetName="border" Value="#EAEAF1"/>


                        </MultiDataTrigger>
                        <EventTrigger RoutedEvent="GotKeyboardFocus">
                            <BeginStoryboard>
                                <Storyboard>
                                   
                                  

                                    <DoubleAnimation Duration="0:0:.2" Storyboard.TargetName="sombreBorder" Storyboard.TargetProperty="Height" To="18"/>

                                    <DoubleAnimation Duration="0:0:0.3" Storyboard.TargetName="translate" Storyboard.TargetProperty="Y" To="28"/>



                                    <DoubleAnimation Duration="0:0:.3" Storyboard.TargetName="sombreBorder" Storyboard.TargetProperty="Height" To="35"/>
                                   


                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="LostKeyboardFocus">
                            <BeginStoryboard>
                                <Storyboard>
                                
                                    <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="sombreBorder" Storyboard.TargetProperty="Height" To="15"/>
                                   

                                    <DoubleAnimation Duration="0:0:0.3" Storyboard.TargetName="sombreBorder" Storyboard.TargetProperty="Height" To="0"/>
                                   

                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    <Style TargetType="{x:Type Button}" x:Key="SubmissionButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="2" Background="{Binding Background , RelativeSource={RelativeSource Mode=TemplatedParent}}">
                        <StackPanel Orientation="Horizontal">
                            <Path  Data="{Binding Path=(local:AttachedProperty.IconData) , RelativeSource={RelativeSource Mode=TemplatedParent}}" Height="13" Width="13" Margin="5" Stretch="Fill" Fill="White" VerticalAlignment="Center"/>
                            <TextBlock FontFamily="{DynamicResource comforta}" FontSize="14" Text="{TemplateBinding Content}" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="DemiBold" Margin="5"/>

                        </StackPanel>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TabButtonStyle" TargetType="{x:Type Button}">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"   x:Name="border" CornerRadius="2" >
                        <TextBlock Name="text" FontSize="12" FontWeight="Bold" FontFamily="{DynamicResource comforta}" Text="{TemplateBinding Content}" Foreground="White" Opacity="0.8"  VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#507091" TargetName="border" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" Value="{Binding Background , RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="border"/>
                        </Trigger>
                        <!--<Trigger Property="Background" Value="White" >
                            <Setter Property="Foreground" Value="{DynamicResource TurqoiFoncé}" TargetName="text"/>
                        </Trigger>-->

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    <Style x:Key="LoginTextBoxStyle" TargetType="TextBox">
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Foreground" Value="{DynamicResource TurqoiClair}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Padding" Value="8"/>
        <Setter Property="FontFamily" Value="{DynamicResource comfortaBold}" />
        <Setter Property="Text" Value="{Binding Text, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">


                    <Border x:Name="border"   BorderThickness="0" Height="40" Width="350" Background="{DynamicResource HoverClairturquoi}" SnapsToDevicePixels="True" >
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid Width="8" Height="38" Background="{DynamicResource TurqoiFoncé}"/>
                            <Grid Grid.Column="1">

                                <ScrollViewer  VerticalAlignment="Center"  x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" VerticalContentAlignment="Center"  />

                                <StackPanel Orientation="Horizontal" Margin="10 5" x:Name="Placeholder">
                                    <Path Data="{Binding Path=(local:AttachedProperty.IconData), RelativeSource ={RelativeSource Mode=TemplatedParent}}" Fill="{DynamicResource TurqoiFoncé}" Opacity="0.8" Stretch="Fill" Height="15" Width="15" Margin="5"/>
                                    <TextBlock Text="{Binding Path=(local:AttachedProperty.Placeholder), RelativeSource={RelativeSource Mode=TemplatedParent}}"  Foreground="{DynamicResource TurqoiClair}" FontWeight="Light" FontSize="13" VerticalAlignment="Center" Opacity="0.8" Margin="10 5">


                                    </TextBlock>

                                </StackPanel>



                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Opacity" Value="0" TargetName="Placeholder"/>
                        </Trigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition  Binding="{Binding IsKeyboardFocused , RelativeSource={RelativeSource Self}}" Value="False"/>
                                <Condition Binding="{Binding Text, Converter={StaticResource IsTextToBooleanValueConverter}, RelativeSource={RelativeSource Self}}" Value="True"/>
                        
                            </MultiDataTrigger.Conditions>
                            
                            
                            <Setter Property="Opacity" Value="0" TargetName="Placeholder"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition  Binding="{Binding IsKeyboardFocused , RelativeSource={RelativeSource Self}}" Value="False"/>
                                <Condition Binding="{Binding Text, Converter={StaticResource IsTextToBooleanValueConverter}, RelativeSource={RelativeSource Self}}" Value="False"/>

                            </MultiDataTrigger.Conditions>


                            <Setter Property="Opacity" Value="1" TargetName="Placeholder"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    <Style x:Key="PasswordBoxStyle1" TargetType="{x:Type PasswordBox}">
        <Setter Property="PasswordChar" Value="●"/>

        <Setter Property="Foreground" Value="{DynamicResource TurqoiFoncé}"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border x:Name="border" BorderThickness="0" Background="{DynamicResource HoverClairturquoi}" SnapsToDevicePixels="True" Height="40" Width="350">
                        <Grid>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid Width="8" Height="38" Background="{DynamicResource TurqoiFoncé}"/>
                            <ScrollViewer Grid.Column="1" x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />

                            <StackPanel Orientation="Horizontal" Margin="10 5" Grid.Column="1" Opacity="{Binding Path=(local:AttachedProperty.password) , RelativeSource={RelativeSource Mode=TemplatedParent} , Converter={StaticResource isTextToOpacityConverter}}" Name="Placeholder">
                                <Path Data="{Binding Path=(local:AttachedProperty.IconData), RelativeSource ={RelativeSource Mode=TemplatedParent}}" Fill="{DynamicResource TurqoiFoncé}" Opacity="0.8" Height="15" Width="14" Margin="5" Stretch="Fill" />
                                <TextBlock Text="{Binding Path=(local:AttachedProperty.Placeholder), RelativeSource={RelativeSource Mode=TemplatedParent}}"  Foreground="{DynamicResource TurqoiClair}" FontWeight="ExtraLight" FontSize="15" VerticalAlignment="Center" Opacity="0.8" Margin="10 5">


                                </TextBlock>

                            </StackPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Opacity" Value="0" TargetName="Placeholder"/>
                        </Trigger>


                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
      
    </Style>
    <Style TargetType="Button" x:Key="CercleLoginButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="30" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" Background="{TemplateBinding Background}" >
                        <ContentPresenter Content="{TemplateBinding Content}" Name="content"/>
                    </Border>
                    <ControlTemplate.Triggers >
                        <Trigger Property="IsMouseOver" Value="True"  >
                        
                            <Setter TargetName="content" Property="Opacity" Value="1"/>

                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="content" Property="Opacity" Value="0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
                
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Button" x:Key="PopUpButton">
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="bord" Height="auto" Width="{TemplateBinding Width}">
                        <TextBlock  Name="text" VerticalAlignment="Center" Text="{TemplateBinding Content}" FontSize="10" FontFamily="{DynamicResource comforta}" FontWeight="Bold" Foreground="{DynamicResource HoverClairturquoi}" TextWrapping="Wrap" MaxWidth="110" Margin="13"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="bord">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource turqoiTresClair}" Opacity="0.30"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" Value="Transparent" TargetName="bord"/>
                           
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Button" x:Key="MenuStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="bord" BorderThickness="0" Background="Transparent" Height="70" Width="100">
                        <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Path Data="{Binding Path=(local:AttachedProperty.IconData) ,RelativeSource={RelativeSource Mode=TemplatedParent}}" Stretch="Fill" Height="18" Width="18" Fill="White" Opacity="0.8"/>
                            <TextBlock Text="{TemplateBinding Content}" FontSize="10" FontFamily="{StaticResource comfortaBold}" Foreground="White" HorizontalAlignment="Center" Margin=" 0 15 0 0" VerticalAlignment="Center"/>

                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="bord">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource turqoiTresClair}" Opacity="0.10"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" Value="Transparent" TargetName="bord"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Button" x:Key="AppointmentButton" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="5" BorderThickness="0" Background="{TemplateBinding Background}">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="5">
                            <Path Fill="{TemplateBinding Foreground}" Data="{Binding Path=(local:AttachedProperty.IconData) , RelativeSource={RelativeSource Mode=TemplatedParent}}" Height="8" Width="8" Stretch="Fill" Margin="5"/>
                            <TextBlock FontSize="11" Foreground="{TemplateBinding Foreground}"  Text="{TemplateBinding Content}"/>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>